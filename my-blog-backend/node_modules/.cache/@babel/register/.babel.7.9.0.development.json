{
  "{\"sourceRoot\":\"C:\\\\Users\\\\Calvin\\\\Desktop\\\\my-blog\\\\my-blog-backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Calvin\\\\Desktop\\\\my-blog\\\\my-blog-backend\",\"filename\":\"C:\\\\Users\\\\Calvin\\\\Desktop\\\\my-blog\\\\my-blog-backend\\\\src\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Calvin\\\\Desktop\\\\my-blog\\\\my-blog-backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Calvin\\Desktop\\my-blog\\my-blog-backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Calvin\\Desktop\\my-blog\\my-blog-backend",
      "filename": "C:\\Users\\Calvin\\Desktop\\my-blog\\my-blog-backend\\src\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Calvin\\Desktop\\my-blog\\my-blog-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Calvin\\Desktop\\my-blog\\my-blog-backend\\src\\server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Calvin\\Desktop\\my-blog\\my-blog-backend\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Calvin\\Desktop\\my-blog\\my-blog-backend\\src\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar express = require('express');\n\nvar articlesInfo = {\n  'learn-react': {\n    upvotes: 0,\n    comments: []\n  },\n  'learn-node': {\n    upvotes: 0,\n    comments: []\n  },\n  'my-thoughts-on-resumes': {\n    upvotes: 0,\n    comments: []\n  }\n};\nvar app = express();\napp.use(_bodyParser.default.json());\napp.post('/api/articles/:name/upvote', function (req, res) {\n  var articleName = req.params.name;\n  articlesInfo[articleName].upvotes += 1;\n  res.status(200).send(\"\".concat(articleName, \" now has \").concat(articlesInfo[articleName].upvotes, \" upvotes\"));\n});\napp.post('/api/articles/:name/add-comment', function (req, res) {\n  var _req$body = req.body,\n      username = _req$body.username,\n      text = _req$body.text;\n  var articleName = req.params.name;\n  articlesInfo[articleName].comments.push({\n    username: username,\n    text: text\n  });\n  res.status(200).res.send(articlesInfo[articleName]);\n});\napp.listen(8000, function () {\n  return console.log('Listening on port 8000');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImFydGljbGVzSW5mbyIsInVwdm90ZXMiLCJjb21tZW50cyIsImFwcCIsInVzZSIsImJvZHlQYXJzZXIiLCJqc29uIiwicG9zdCIsInJlcSIsInJlcyIsImFydGljbGVOYW1lIiwicGFyYW1zIiwibmFtZSIsInN0YXR1cyIsInNlbmQiLCJib2R5IiwidXNlcm5hbWUiLCJ0ZXh0IiwicHVzaCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7QUFDQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUdBLElBQU1DLFlBQVksR0FBRztBQUNqQixpQkFBZTtBQUNYQyxJQUFBQSxPQUFPLEVBQUUsQ0FERTtBQUVYQyxJQUFBQSxRQUFRLEVBQUU7QUFGQyxHQURFO0FBS2pCLGdCQUFjO0FBQ1ZELElBQUFBLE9BQU8sRUFBRSxDQURDO0FBRVZDLElBQUFBLFFBQVEsRUFBRTtBQUZBLEdBTEc7QUFTakIsNEJBQTBCO0FBQ3RCRCxJQUFBQSxPQUFPLEVBQUUsQ0FEYTtBQUV0QkMsSUFBQUEsUUFBUSxFQUFFO0FBRlk7QUFUVCxDQUFyQjtBQWlCQSxJQUFNQyxHQUFHLEdBQUdMLE9BQU8sRUFBbkI7QUFFQUssR0FBRyxDQUFDQyxHQUFKLENBQVFDLG9CQUFXQyxJQUFYLEVBQVI7QUFFQUgsR0FBRyxDQUFDSSxJQUFKLENBQVMsNEJBQVQsRUFBdUMsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDakQsTUFBTUMsV0FBVyxHQUFHRixHQUFHLENBQUNHLE1BQUosQ0FBV0MsSUFBL0I7QUFDQVosRUFBQUEsWUFBWSxDQUFDVSxXQUFELENBQVosQ0FBMEJULE9BQTFCLElBQXFDLENBQXJDO0FBQ0FRLEVBQUFBLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLFdBQXdCSixXQUF4QixzQkFBK0NWLFlBQVksQ0FBQ1UsV0FBRCxDQUFaLENBQTBCVCxPQUF6RTtBQUVILENBTEQ7QUFPQUUsR0FBRyxDQUFDSSxJQUFKLENBQVMsaUNBQVQsRUFBNEMsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWE7QUFBQSxrQkFDMUJELEdBQUcsQ0FBQ08sSUFEc0I7QUFBQSxNQUM3Q0MsUUFENkMsYUFDN0NBLFFBRDZDO0FBQUEsTUFDbkNDLElBRG1DLGFBQ25DQSxJQURtQztBQUVyRCxNQUFNUCxXQUFXLEdBQUdGLEdBQUcsQ0FBQ0csTUFBSixDQUFXQyxJQUEvQjtBQUVBWixFQUFBQSxZQUFZLENBQUNVLFdBQUQsQ0FBWixDQUEwQlIsUUFBMUIsQ0FBbUNnQixJQUFuQyxDQUF3QztBQUFDRixJQUFBQSxRQUFRLEVBQVJBLFFBQUQ7QUFBV0MsSUFBQUEsSUFBSSxFQUFKQTtBQUFYLEdBQXhDO0FBQ0FSLEVBQUFBLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVgsRUFBZ0JKLEdBQWhCLENBQW9CSyxJQUFwQixDQUF5QmQsWUFBWSxDQUFDVSxXQUFELENBQXJDO0FBQ0gsQ0FORDtBQVFBUCxHQUFHLENBQUNnQixNQUFKLENBQVcsSUFBWCxFQUFpQjtBQUFBLFNBQU1DLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHdCQUFaLENBQU47QUFBQSxDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXENhbHZpblxcRGVza3RvcFxcbXktYmxvZ1xcbXktYmxvZy1iYWNrZW5kXFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJ1xyXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXHJcblxyXG5cclxuY29uc3QgYXJ0aWNsZXNJbmZvID0ge1xyXG4gICAgJ2xlYXJuLXJlYWN0Jzoge1xyXG4gICAgICAgIHVwdm90ZXM6IDAsXHJcbiAgICAgICAgY29tbWVudHM6IFtdXHJcbiAgICB9LFxyXG4gICAgJ2xlYXJuLW5vZGUnOiB7XHJcbiAgICAgICAgdXB2b3RlczogMCxcclxuICAgICAgICBjb21tZW50czogW11cclxuICAgIH0sXHJcbiAgICAnbXktdGhvdWdodHMtb24tcmVzdW1lcyc6IHtcclxuICAgICAgICB1cHZvdGVzOiAwLFxyXG4gICAgICAgIGNvbW1lbnRzOiBbXVxyXG4gICAgfSxcclxuXHJcbn1cclxuXHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKClcclxuXHJcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpXHJcblxyXG5hcHAucG9zdCgnL2FwaS9hcnRpY2xlcy86bmFtZS91cHZvdGUnLCAocmVxLCByZXMpID0+IHtcclxuICAgIGNvbnN0IGFydGljbGVOYW1lID0gcmVxLnBhcmFtcy5uYW1lO1xyXG4gICAgYXJ0aWNsZXNJbmZvW2FydGljbGVOYW1lXS51cHZvdGVzICs9IDE7XHJcbiAgICByZXMuc3RhdHVzKDIwMCkuc2VuZChgJHthcnRpY2xlTmFtZX0gbm93IGhhcyAke2FydGljbGVzSW5mb1thcnRpY2xlTmFtZV0udXB2b3Rlc30gdXB2b3Rlc2ApXHJcblxyXG59KVxyXG5cclxuYXBwLnBvc3QoJy9hcGkvYXJ0aWNsZXMvOm5hbWUvYWRkLWNvbW1lbnQnLCAocmVxLCByZXMpID0+e1xyXG4gICAgY29uc3QgeyB1c2VybmFtZSwgdGV4dCB9ID0gcmVxLmJvZHk7XHJcbiAgICBjb25zdCBhcnRpY2xlTmFtZSA9IHJlcS5wYXJhbXMubmFtZTtcclxuXHJcbiAgICBhcnRpY2xlc0luZm9bYXJ0aWNsZU5hbWVdLmNvbW1lbnRzLnB1c2goe3VzZXJuYW1lLCB0ZXh0fSk7XHJcbiAgICByZXMuc3RhdHVzKDIwMCkucmVzLnNlbmQoYXJ0aWNsZXNJbmZvW2FydGljbGVOYW1lXSlcclxufSlcclxuXHJcbmFwcC5saXN0ZW4oODAwMCwgKCkgPT4gY29uc29sZS5sb2coJ0xpc3RlbmluZyBvbiBwb3J0IDgwMDAnKSlcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "articlesInfo",
        "upvotes",
        "comments",
        "app",
        "use",
        "bodyParser",
        "json",
        "post",
        "req",
        "res",
        "articleName",
        "params",
        "name",
        "status",
        "send",
        "body",
        "username",
        "text",
        "push",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;;;AACA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAGA,IAAMC,YAAY,GAAG;AACjB,iBAAe;AACXC,IAAAA,OAAO,EAAE,CADE;AAEXC,IAAAA,QAAQ,EAAE;AAFC,GADE;AAKjB,gBAAc;AACVD,IAAAA,OAAO,EAAE,CADC;AAEVC,IAAAA,QAAQ,EAAE;AAFA,GALG;AASjB,4BAA0B;AACtBD,IAAAA,OAAO,EAAE,CADa;AAEtBC,IAAAA,QAAQ,EAAE;AAFY;AATT,CAArB;AAiBA,IAAMC,GAAG,GAAGL,OAAO,EAAnB;AAEAK,GAAG,CAACC,GAAJ,CAAQC,oBAAWC,IAAX,EAAR;AAEAH,GAAG,CAACI,IAAJ,CAAS,4BAAT,EAAuC,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjD,MAAMC,WAAW,GAAGF,GAAG,CAACG,MAAJ,CAAWC,IAA/B;AACAZ,EAAAA,YAAY,CAACU,WAAD,CAAZ,CAA0BT,OAA1B,IAAqC,CAArC;AACAQ,EAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,WAAwBJ,WAAxB,sBAA+CV,YAAY,CAACU,WAAD,CAAZ,CAA0BT,OAAzE;AAEH,CALD;AAOAE,GAAG,CAACI,IAAJ,CAAS,iCAAT,EAA4C,UAACC,GAAD,EAAMC,GAAN,EAAa;AAAA,kBAC1BD,GAAG,CAACO,IADsB;AAAA,MAC7CC,QAD6C,aAC7CA,QAD6C;AAAA,MACnCC,IADmC,aACnCA,IADmC;AAErD,MAAMP,WAAW,GAAGF,GAAG,CAACG,MAAJ,CAAWC,IAA/B;AAEAZ,EAAAA,YAAY,CAACU,WAAD,CAAZ,CAA0BR,QAA1B,CAAmCgB,IAAnC,CAAwC;AAACF,IAAAA,QAAQ,EAARA,QAAD;AAAWC,IAAAA,IAAI,EAAJA;AAAX,GAAxC;AACAR,EAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBJ,GAAhB,CAAoBK,IAApB,CAAyBd,YAAY,CAACU,WAAD,CAArC;AACH,CAND;AAQAP,GAAG,CAACgB,MAAJ,CAAW,IAAX,EAAiB;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,wBAAZ,CAAN;AAAA,CAAjB",
      "sourceRoot": "C:\\Users\\Calvin\\Desktop\\my-blog\\my-blog-backend\\src\\",
      "sourcesContent": [
        "import bodyParser from 'body-parser'\r\nconst express = require('express')\r\n\r\n\r\nconst articlesInfo = {\r\n    'learn-react': {\r\n        upvotes: 0,\r\n        comments: []\r\n    },\r\n    'learn-node': {\r\n        upvotes: 0,\r\n        comments: []\r\n    },\r\n    'my-thoughts-on-resumes': {\r\n        upvotes: 0,\r\n        comments: []\r\n    },\r\n\r\n}\r\n\r\n\r\nconst app = express()\r\n\r\napp.use(bodyParser.json())\r\n\r\napp.post('/api/articles/:name/upvote', (req, res) => {\r\n    const articleName = req.params.name;\r\n    articlesInfo[articleName].upvotes += 1;\r\n    res.status(200).send(`${articleName} now has ${articlesInfo[articleName].upvotes} upvotes`)\r\n\r\n})\r\n\r\napp.post('/api/articles/:name/add-comment', (req, res) =>{\r\n    const { username, text } = req.body;\r\n    const articleName = req.params.name;\r\n\r\n    articlesInfo[articleName].comments.push({username, text});\r\n    res.status(200).res.send(articlesInfo[articleName])\r\n})\r\n\r\napp.listen(8000, () => console.log('Listening on port 8000'))\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585681549287
  }
}